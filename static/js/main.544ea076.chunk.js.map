{"version":3,"sources":["Service/api.js","Component/AllCountrys.jsx","Component/AddCountry.jsx","Component/EditCountry.jsx","Component/NavBar.jsx","Assets/Images/NotFound.jpg","Component/NotFound.jsx","App.js","reportWebVitals.js","index.js"],"names":["countrysUrl","getCountrys","id","a","axios","get","addCountry","country","post","deleteCountry","delete","editCountry","put","useStyles","makeStyles","table","width","margin","thead","fontSize","background","color","row","AllCountrys","useState","countrys","setCountrys","classes","useEffect","getAllCountrys","deleteCountryData","response","data","Table","className","TableHead","TableRow","TableCell","TableBody","map","name","currency","population","GDP","Button","variant","style","marginRight","component","Link","to","onClick","initialValue","container","marginTop","AddCountry","setCountry","history","useHistory","onValueChange","e","console","log","target","value","addCountryDetails","push","FormGroup","Typography","FormControl","InputLabel","htmlFor","Input","onChange","EditCountry","useParams","loadCountryDetails","editCountryDetails","useStyle","header","tabs","textDecoration","NavBar","AppBar","position","Toolbar","exact","NotFound","src","notfound","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAEMA,EAAc,iCAGPC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACvBD,EAAKA,GAAM,GADY,SAEVE,IAAMC,IAAN,UAAaL,EAAb,YAA4BE,IAFlB,mFAAH,sDAKXI,EAAU,uCAAG,WAAOC,GAAP,SAAAJ,EAAA,sEACTC,IAAMI,KAAN,UAAcR,GAAeO,GADpB,mFAAH,sDAIVE,EAAa,uCAAG,WAAOP,GAAP,SAAAC,EAAA,sEACZC,IAAMM,OAAN,UAAgBV,EAAhB,YAA+BE,IADnB,mFAAH,sDAIbS,EAAW,uCAAG,WAAOT,EAAIK,GAAX,SAAAJ,EAAA,sEACVC,IAAMQ,IAAN,UAAaZ,EAAb,YAA4BE,GAAMK,GADxB,mFAAH,wD,eCblBM,EAAYC,YAAW,CACzBC,MAAO,CACHC,MAAO,MACPC,OAAQ,iBAEZC,MAAO,CACH,QAAS,CACLC,SAAU,GACVC,WAAY,UACZC,MAAO,YAGfC,IAAK,CACD,QAAS,CACLH,SAAU,OAuDPI,EAjDK,WAChB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAUd,IAEhBe,qBAAU,WACNC,MACD,IAEH,IAAMC,EAAiB,uCAAG,WAAO5B,GAAP,SAAAC,EAAA,sEAChBM,EAAcP,GADE,OAEtB2B,IAFsB,2CAAH,sDAKjBA,EAAc,uCAAG,4BAAA1B,EAAA,sEACEF,IADF,OACf8B,EADe,OAEnBL,EAAYK,EAASC,MAFF,2CAAH,qDAKpB,OACI,eAACC,EAAA,EAAD,CAAOC,UAAWP,EAAQZ,MAA1B,UACI,cAACoB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAUF,UAAWP,EAAQT,MAA7B,UACI,cAACmB,EAAA,EAAD,iBACA,cAACA,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,kCACA,cAACA,EAAA,EAAD,+BACA,cAACA,EAAA,EAAD,SAGR,cAACC,EAAA,EAAD,UACKb,EAASc,KAAI,SAAChC,GAAD,OACV,eAAC6B,EAAA,EAAD,CAAUF,UAAWP,EAAQL,IAA7B,UACI,cAACe,EAAA,EAAD,UAAY9B,EAAQL,KACpB,cAACmC,EAAA,EAAD,UAAY9B,EAAQiC,OACpB,cAACH,EAAA,EAAD,UAAY9B,EAAQkC,WACpB,cAACJ,EAAA,EAAD,UAAY9B,EAAQmC,aACpB,cAACL,EAAA,EAAD,UAAY9B,EAAQoC,MACpB,eAACN,EAAA,EAAD,WACI,cAACO,EAAA,EAAD,CAAQvB,MAAM,UAAUwB,QAAQ,YAAYC,MAAO,CAACC,YAAY,IAAKC,UAAWC,IAAMC,GAAE,gBAAW3C,EAAQL,IAA3G,kBACA,cAAC0C,EAAA,EAAD,CAAQvB,MAAM,YAAYwB,QAAQ,YAAYM,QAAS,kBAAMrB,EAAkBvB,EAAQL,KAAvF,yBAR+BK,EAAQL,a,oECpD7DkD,EAAe,CACjBZ,KAAM,GACNC,SAAU,GACVC,WAAY,GACZC,IAAK,IAGH9B,EAAYC,YAAW,CACzBuC,UAAW,CACPrC,MAAO,MACPC,OAAQ,aACR,QAAS,CACLqC,UAAW,OA+CRC,EA1CI,WACf,MAA8B/B,mBAAS4B,GAAvC,mBAAO7C,EAAP,KAAgBiD,EAAhB,KACQhB,EAAsCjC,EAAtCiC,KAAMC,EAAgClC,EAAhCkC,SAAUC,EAAsBnC,EAAtBmC,WAAaC,EAASpC,EAAToC,IAC/BhB,EAAUd,IACZ4C,EAAUC,cAERC,EAAgB,SAACC,GACnBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBR,EAAW,2BAAIjD,GAAL,kBAAeqD,EAAEG,OAAOvB,KAAOoB,EAAEG,OAAOC,UAGhDC,EAAiB,uCAAG,sBAAA9D,EAAA,sEAChBG,EAAWC,GADK,OAEtBkD,EAAQS,KAAK,SAFS,2CAAH,qDAKvB,OACI,eAACC,EAAA,EAAD,CAAWjC,UAAWP,EAAQ0B,UAA9B,UACI,cAACe,EAAA,EAAD,CAAYvB,QAAQ,KAApB,yBACA,eAACwB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,kBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,OAAOwB,MAAOxB,EAAMtC,GAAG,gBAE1E,eAACmE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,sBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,WAAWwB,MAAOvB,EAAUvC,GAAG,gBAElF,eAACmE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,wBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,aAAawB,MAAOtB,EAAYxC,GAAG,gBAEtF,eAACmE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,MAAMwB,MAAOrB,EAAKzC,GAAG,gBAExE,cAACmE,EAAA,EAAD,UACI,cAACzB,EAAA,EAAD,CAAQC,QAAQ,YAAYxB,MAAM,UAAU8B,QAAS,kBAAMc,KAA3D,+BCrDVb,EAAe,CACjBZ,KAAM,GACRC,SAAU,GACVC,WAAY,GACZC,IAAK,IAGD9B,EAAYC,YAAW,CACzBuC,UAAW,CACPrC,MAAO,MACPC,OAAQ,aACR,QAAS,CACLqC,UAAW,OAyDRoB,EApDK,WAChB,MAA8BlD,mBAAS4B,GAAvC,mBAAO7C,EAAP,KAAgBiD,EAAhB,KACQhB,EAAoCjC,EAApCiC,KAAMC,EAA8BlC,EAA9BkC,SAAUC,EAAoBnC,EAApBmC,WAAYC,EAAQpC,EAARoC,IAC5BzC,EAAOyE,cAAPzE,GACFyB,EAAUd,IACZ4C,EAAUC,cAEd9B,qBAAU,WACNgD,MACD,IAEH,IAAMA,EAAkB,uCAAG,4BAAAzE,EAAA,sEACAF,EAAYC,GADZ,OACjB6B,EADiB,OAEvByB,EAAWzB,EAASC,MAFG,2CAAH,qDAKlB6C,EAAkB,uCAAG,sBAAA1E,EAAA,sEACAQ,EAAYT,EAAIK,GADhB,cAEvBkD,EAAQS,KAAK,QAFU,2CAAH,qDAKlBP,EAAgB,SAACC,GACnBC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBR,EAAW,2BAAIjD,GAAL,kBAAeqD,EAAEG,OAAOvB,KAAOoB,EAAEG,OAAOC,UAGtD,OACI,eAACG,EAAA,EAAD,CAAWjC,UAAWP,EAAQ0B,UAA9B,UACI,cAACe,EAAA,EAAD,CAAYvB,QAAQ,KAApB,8BACA,eAACwB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,kBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,OAAOwB,MAAOxB,EAAMtC,GAAG,WAAW,mBAAiB,sBAEtG,eAACmE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,sBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,WAAWwB,MAAOvB,EAAUvC,GAAG,WAAW,mBAAiB,sBAE9G,eAACmE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,wBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,aAAawB,MAAOtB,EAAYxC,GAAG,WAAW,mBAAiB,sBAElH,eAACmE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,iBACA,cAACC,EAAA,EAAD,CAAOC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAAIpB,KAAK,MAAMwB,MAAOrB,EAAKzC,GAAG,WAAW,mBAAiB,sBAEpG,cAACmE,EAAA,EAAD,UACI,cAACzB,EAAA,EAAD,CAAQC,QAAQ,YAAYxB,MAAM,UAAU8B,QAAS,kBAAM0B,KAA3D,gC,kBCjEVC,EAAWhE,YAAW,CACxBiE,OAAQ,CACJ3D,WAAY,WAEhB4D,KAAM,CACF3D,MAAO,UACP0B,YAAa,GACbkC,eAAgB,OAChB9D,SAAU,MAiBH+D,EAbA,WACX,IAAMvD,EAAUmD,IAChB,OACI,cAACK,EAAA,EAAD,CAAQC,SAAS,SAASlD,UAAWP,EAAQoD,OAA7C,SACI,eAACM,EAAA,EAAD,WAEI,cAAC,IAAD,CAASnD,UAAWP,EAAQqD,KAAM9B,GAAG,MAAMoC,OAAK,EAAhD,2BACA,cAAC,IAAD,CAASpD,UAAWP,EAAQqD,KAAM9B,GAAG,MAAMoC,OAAK,EAAhD,+BCtBD,MAA0B,qCCQ1BC,EANE,WACb,OACI,qBAAKC,IAAKC,EAAW3C,MAAO,CAAC9B,MAAO,MAAOC,OAAQ,mBCmB5CyE,MAff,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,OAAK,EAACK,KAAK,IAAI3C,UAAWzB,IACjC,cAAC,IAAD,CAAO+D,OAAK,EAACK,KAAK,OAAO3C,UAAWzB,IACpC,cAAC,IAAD,CAAO+D,OAAK,EAACK,KAAK,OAAO3C,UAAWO,IACpC,cAAC,IAAD,CAAO+B,OAAK,EAACK,KAAK,YAAY3C,UAAW0B,IACzC,cAAC,IAAD,CAAO1B,UAAWuC,WCLXK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.544ea076.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst countrysUrl = 'http://localhost:3002/countrys';\n\n\nexport const getCountrys = async (id) => {\n    id = id || '';\n    return await axios.get(`${countrysUrl}/${id}`);\n}\n\nexport const addCountry = async (country) => {\n    return await axios.post(`${countrysUrl}`, country);\n}\n\nexport const deleteCountry = async (id) => {\n    return await axios.delete(`${countrysUrl}/${id}`);\n}\n\nexport const editCountry = async (id, country) => {\n    return await axios.put(`${countrysUrl}/${id}`, country)\n}","import react, { useState, useEffect } from 'react';\nimport { Table, TableHead, TableCell, Paper, TableRow, TableBody, Button, makeStyles } from '@material-ui/core'\nimport { getCountrys, deleteCountry } from '../Service/api';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    table: {\n        width: '90%',\n        margin: '50px 0 0 50px'\n    },\n    thead: {\n        '& > *': {\n            fontSize: 20,\n            background: '#000000',\n            color: '#FFFFFF'\n        }\n    },\n    row: {\n        '& > *': {\n            fontSize: 18\n        }\n    }\n})\n\n\nconst AllCountrys = () => {\n    const [countrys, setCountrys] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        getAllCountrys();\n    }, []);\n\n    const deleteCountryData = async (id) => {\n        await deleteCountry(id);\n        getAllCountrys();\n    }\n\n    const getAllCountrys = async () => {\n        let response = await getCountrys();\n        setCountrys(response.data);\n    }\n\n    return (\n        <Table className={classes.table}>\n            <TableHead>\n                <TableRow className={classes.thead}>\n                    <TableCell>Id</TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Currency</TableCell>\n                    <TableCell>Population(million)</TableCell>\n                    <TableCell>GDP(billion USD)</TableCell>\n                    <TableCell></TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {countrys.map((country) => (\n                    <TableRow className={classes.row} key={country.id}>\n                        <TableCell>{country.id}</TableCell>\n                        <TableCell>{country.name}</TableCell>\n                        <TableCell>{country.currency}</TableCell>\n                        <TableCell>{country.population}</TableCell>\n                        <TableCell>{country.GDP}</TableCell>\n                        <TableCell>\n                            <Button color=\"primary\" variant=\"contained\" style={{marginRight:10}} component={Link} to={`/edit/${country.id}`}>Edit</Button>\n                            <Button color=\"secondary\" variant=\"contained\" onClick={() => deleteCountryData(country.id)}>Delete</Button> \n                        </TableCell>\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    )\n}\n\nexport default AllCountrys;","import react, { useState } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { addCountry } from '../Service/api';\nimport { useHistory } from 'react-router-dom';\n\nconst initialValue = {\n    name: '',\n    currency: '',\n    population: '',\n    GDP: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst AddCountry = () => {\n    const [country, setCountry] = useState(initialValue);\n    const { name, currency, population , GDP  } = country;\n    const classes = useStyles();\n    let history = useHistory();\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setCountry({...country, [e.target.name]: e.target.value})\n    }\n\n    const addCountryDetails = async() => {\n        await addCountry(country);\n        history.push('./all');\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Add Country</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Currency</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='currency' value={currency} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Population</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='population' value={population} id=\"my-input\"/>\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">GDP</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='GDP' value={GDP} id=\"my-input\" />\n            </FormControl>\n            <FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => addCountryDetails()}>Add Country</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default AddCountry;","import { useState, useEffect } from 'react';\nimport { FormGroup, FormControl, InputLabel, Input, Button, makeStyles, Typography } from '@material-ui/core';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getCountrys, editCountry } from '../Service/api';\n\nconst initialValue = {\n    name: '',\n  currency: '',\n  population: '',\n  GDP: ''\n}\n\nconst useStyles = makeStyles({\n    container: {\n        width: '50%',\n        margin: '5% 0 0 25%',\n        '& > *': {\n            marginTop: 20\n        }\n    }\n})\n\nconst EditCountry = () => {\n    const [country, setCountry] = useState(initialValue);\n    const { name, currency, population, GDP } = country;\n    const { id } = useParams();\n    const classes = useStyles();\n    let history = useHistory();\n\n    useEffect(() => {\n        loadCountryDetails();\n    }, []);\n\n    const loadCountryDetails = async() => {\n        const response = await getCountrys(id);\n        setCountry(response.data);\n    }\n\n    const editCountryDetails = async() => {\n        const response = await editCountry(id, country);\n        history.push('/all');\n    }\n\n    const onValueChange = (e) => {\n        console.log(e.target.value);\n        setCountry({...country, [e.target.name]: e.target.value})\n    }\n\n    return (\n        <FormGroup className={classes.container}>\n            <Typography variant=\"h4\">Edit Information</Typography>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Name</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='name' value={name} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Currency</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='currency' value={currency} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">Population</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='population' value={population} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <InputLabel htmlFor=\"my-input\">GDP</InputLabel>\n                <Input onChange={(e) => onValueChange(e)} name='GDP' value={GDP} id=\"my-input\" aria-describedby=\"my-helper-text\" />\n            </FormControl>\n            <FormControl>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => editCountryDetails()}>Edit Country</Button>\n            </FormControl>\n        </FormGroup>\n    )\n}\n\nexport default EditCountry;","import { AppBar, Toolbar, makeStyles } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyle = makeStyles({\n    header: {\n        background: '#111111'\n    },\n    tabs: {\n        color: '#FFFFFF',\n        marginRight: 20,\n        textDecoration: 'none',\n        fontSize: 20\n    }\n})\n\nconst NavBar = () => {\n    const classes = useStyle();\n    return (\n        <AppBar position=\"static\" className={classes.header}>\n            <Toolbar>\n                \n                <NavLink className={classes.tabs} to=\"all\" exact>All Countries</NavLink>\n                <NavLink className={classes.tabs} to=\"add\" exact>Add country</NavLink>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/NotFound.b684e5be.jpg\";","import notfound from '../Assets/Images/NotFound.jpg';\n\nconst NotFound = () => {\n    return (\n        <img src={notfound}  style={{width: '30%', margin: '80px 0 0 35%'}}/>\n    )\n}\n\nexport default NotFound;","import AllCountrys from './Component/AllCountrys';\nimport AddCountry from './Component/AddCountry';\nimport EditCountry from './Component/EditCountry';\nimport NavBar from './Component/NavBar';\nimport NotFound from './Component/NotFound'; \n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={AllCountrys} />\n        <Route exact path=\"/all\" component={AllCountrys} />\n        <Route exact path=\"/add\" component={AddCountry} />\n        <Route exact path=\"/edit/:id\" component={EditCountry} />\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}